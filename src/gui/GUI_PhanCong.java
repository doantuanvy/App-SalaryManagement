package gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

import connectDB.ConnectDB;
import dao.DAO_PhanCong;
import entity.CongNhanNew;
import entity.PhanCong;
import entity.SanPham;

public class GUI_PhanCong extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public GUI_PhanCong() {
        try {
	  		ConnectDB.getInstance().connect();
	  	}catch (Exception e) {
			// TODO: handle exception
	  		e.printStackTrace();
		}
        initComponents();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnTieuDe = new javax.swing.JPanel();
        lbTieuDe = new javax.swing.JLabel();
        pnCenter = new javax.swing.JPanel();
        spPhanCong = new javax.swing.JScrollPane();
        tbPhanCong = new javax.swing.JTable();
        pnTxt = new javax.swing.JPanel();
        lbMaPhanCong = new javax.swing.JLabel();
        txtMaPhanCong = new javax.swing.JTextField();
        lbGiaiDoan = new javax.swing.JLabel();
        cbGiaiDoan = new javax.swing.JComboBox<>();
        txtMaCongNhan = new javax.swing.JTextField();
        lbMaCongNhan = new javax.swing.JLabel();
        lbMaSanPham = new javax.swing.JLabel();
        txtMaSanPham = new javax.swing.JTextField();
        txtDonGia = new javax.swing.JTextField();
        lbDonGia = new javax.swing.JLabel();
        pnChucNang = new javax.swing.JPanel();
        lbTimKiemPhanCong = new javax.swing.JLabel();
        txtTimPhanCong = new javax.swing.JTextField();
        btTimPhanCong = new javax.swing.JButton();
        btThem = new javax.swing.JButton();
        btXoa = new javax.swing.JButton();
        btSua = new javax.swing.JButton();
        btXoaRong = new javax.swing.JButton();
        pnBangCongNhan = new javax.swing.JPanel();
        lbTimKiemCongNhan = new javax.swing.JLabel();
        txtTimCongNhan = new javax.swing.JTextField();
        btTimCongNhan = new javax.swing.JButton();
        spBangCongNhan = new javax.swing.JScrollPane();
        tbCongNhan = new javax.swing.JTable();
        pnChonBang = new javax.swing.JPanel();
        btBangGiaiDoan = new javax.swing.JButton();
        btBangCongNhan = new javax.swing.JButton();
        btHuy = new JButton("Huỷ");
        
        phanCong = new DAO_PhanCong();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(100, 100, 1360, 680);

        pnTieuDe.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbTieuDe.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        lbTieuDe.setText("Phân Công ");

        javax.swing.GroupLayout pnTieuDeLayout = new javax.swing.GroupLayout(pnTieuDe);
        pnTieuDe.setLayout(pnTieuDeLayout);
        pnTieuDeLayout.setHorizontalGroup(
            pnTieuDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTieuDeLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(lbTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(948, Short.MAX_VALUE))
        );
        pnTieuDeLayout.setVerticalGroup(
            pnTieuDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnTieuDeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTieuDe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
  
        tbPhanCong.setModel(modelPhanCong =new javax.swing.table.DefaultTableModel(
            null,
            new String [] {
                "Mã phân công", "Giai đoạn", "Đơn giá", "Mã công nhân", "Mã sản phẩm"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        updateTablePhanCong();
        spPhanCong.setViewportView(tbPhanCong);

        pnTxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnTxt.setPreferredSize(new java.awt.Dimension(505, 130));

        lbMaPhanCong.setText("Mã phân công:");

        lbGiaiDoan.setText("Giai đoạn:");

        lbMaCongNhan.setText("Mã công nhân: ");

        lbMaSanPham.setText("Mã sản phẩm:");

        txtDonGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDonGiaActionPerformed(evt);
            }
        });

        lbDonGia.setText("Đơn giá:");

        javax.swing.GroupLayout pnTxtLayout = new javax.swing.GroupLayout(pnTxt);
        pnTxt.setLayout(pnTxtLayout);
        pnTxtLayout.setHorizontalGroup(
            pnTxtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTxtLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnTxtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbGiaiDoan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnTxtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    
                    .addComponent(cbGiaiDoan, 0, 100, Short.MAX_VALUE)
                    .addComponent(txtDonGia))
                .addGap(38, 38, 38)
                .addGroup(pnTxtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbMaCongNhan)
                    .addComponent(lbMaSanPham))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnTxtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtMaCongNhan)
                    .addComponent(txtMaSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cbGiaiDoan.addItem("May");
        cbGiaiDoan.addItem("Cat");
        cbGiaiDoan.addItem("Ui");
        cbGiaiDoan.addItem("Dan keo");
        cbGiaiDoan.addItem("Noi vai");
        pnTxtLayout.setVerticalGroup(
            pnTxtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTxtLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(pnTxtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnTxtLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lbDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtMaCongNhan)
                    .addComponent(txtDonGia)
                    .addComponent(lbMaCongNhan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnTxtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnTxtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbGiaiDoan, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbGiaiDoan, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtMaSanPham, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pnChucNang.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnChucNang.setPreferredSize(new java.awt.Dimension(505, 130));

        lbTimKiemPhanCong.setText("Nhập mã phân công:");

        btTimPhanCong.setText("Tìm");
        btTimPhanCong.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				String ma = txtTimPhanCong.getText();
				int totalRow, timThay = 0;
				if (!ma.equals("")) {
					totalRow = modelPhanCong.getRowCount() - 1;
					for (int i = totalRow; i >= 0; i--) {
						if (ma.equalsIgnoreCase(((String) modelPhanCong.getValueAt(i, 0)).trim())) {
							tbPhanCong.setRowSelectionInterval(i, i);
							timThay = 1;
							break;
						}
					}
					if (timThay == 0) {
						JOptionPane.showMessageDialog(null,"Mã phân công không tồn tại");
					}
				} else {
					JOptionPane.showMessageDialog(null,"Vui lòng nhập mã phân công cần tìm");
				}
			}
		});

        btThem.setText("Thêm");
        btThem.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
					String ma = maConThieu();
					String giaiDoan = (String) cbGiaiDoan.getSelectedItem();
					String donGia =txtDonGia.getText().trim();
					String maCN = txtMaCongNhan.getText().trim();
					String maSP = txtMaSanPham.getText().trim();
					if(kiemtra(ma, giaiDoan,donGia,maCN,maSP)) {
					PhanCong pc = new PhanCong(ma,giaiDoan,Double.parseDouble(donGia),new CongNhanNew(maCN),new SanPham(maSP));
						if(phanCong.addPhanCong(pc)) {
							updateTablePhanCong();
							xoaRong();
						}
						else 
						JOptionPane.showMessageDialog(null,"Mã phân công bị trùng");	
					}
				}		
		});

        btXoa.setText("Xóa"); 
        btXoa.addActionListener(new ActionListener() {
			
			@Override
				public void actionPerformed(ActionEvent e) {
					// TODO Auto-generated method stub
					int row = tbPhanCong.getSelectedRow();
					if(row >=0 ) {
						String ma = (String) modelPhanCong.getValueAt(row, 0);
						int ask = JOptionPane.showConfirmDialog(null,"Bạn có chắc muốn xoá phân công này","Xác nhận",JOptionPane.YES_NO_OPTION);
						if(ask == JOptionPane.YES_OPTION) {
						phanCong.delete(ma);
						updateTablePhanCong();
						row1= -1;
						xoaRong();
						}
					}
					else
						JOptionPane.showMessageDialog(null,"Vui lòng chọn hàng cần xóa");
					}
		});
        btSua.setText("Sửa");
        btSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            		if(row1>0) {
            			String ma = txtMaPhanCong.getText().trim();
    					String giaiDoan = (String) cbGiaiDoan.getSelectedItem();
    					String donGia = txtDonGia.getText().trim();
    					String maCN = txtMaCongNhan.getText().trim();
    					String maSP = txtMaSanPham.getText().trim();
    					
    					if(kiemtra(ma, giaiDoan,donGia+"",maCN,maSP)) {
    						PhanCong pc = new PhanCong(ma,giaiDoan,Double.parseDouble(donGia),new CongNhanNew(maCN),new SanPham(maSP));
    						phanCong.update(pc);
    						updateTablePhanCong();
    						row1=-1;
    						xoaRong();
    					}
            		}
            		else {
            			JOptionPane.showMessageDialog(null,"Vui lòng chọn hàng cần sửa");
            	}       	
	            
            }
        });

        btXoaRong.setText("Xóa rỗng");
        btXoaRong.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
					 
						xoaRong();
				
			}
			
		});

        javax.swing.GroupLayout pnChucNangLayout = new javax.swing.GroupLayout(pnChucNang);
        pnChucNang.setLayout(pnChucNangLayout);
        pnChucNangLayout.setHorizontalGroup(
            pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnChucNangLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnChucNangLayout.createSequentialGroup()
                        .addComponent(lbTimKiemPhanCong)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTimPhanCong, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btTimPhanCong))
                    .addGroup(pnChucNangLayout.createSequentialGroup()
                        .addComponent(btThem, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btSua, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btXoaRong, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        pnChucNangLayout.setVerticalGroup(
            pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnChucNangLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btThem, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSua, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnChucNangLayout.createSequentialGroup()
                        .addGap(0, 0, 0)
                        .addComponent(btXoaRong, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 24, Short.MAX_VALUE)
                .addGroup(pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTimKiemPhanCong)
                    .addComponent(txtTimPhanCong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btTimPhanCong))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pnBangCongNhan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnBangCongNhan.setPreferredSize(new java.awt.Dimension(280, 500));

        lbTimKiemCongNhan.setText("Nhập mã công nhân");

        btTimCongNhan.setText("tìm");
        if(lbTimKiemCongNhan.getText().equalsIgnoreCase("Nhập mã công nhân")) {
        btTimCongNhan.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				String ma = txtTimCongNhan.getText();
				int totalRow, timThay = 0;
				if (!ma.equals("")) {
					totalRow = modelCongNhan.getRowCount() - 1;
					for (int i = totalRow; i >= 0; i--) {
						if (ma.equalsIgnoreCase(((String) modelCongNhan.getValueAt(i, 0)).trim())) {
							tbCongNhan.setRowSelectionInterval(i, i);
							timThay = 1;
							break;
						}
					}
					if (timThay == 0) {
						JOptionPane.showMessageDialog(null,"Mã không tồn tại");
					}
				} else {
					JOptionPane.showMessageDialog(null,"Vui lòng nhập mã cần tìm");
				}
			}
		});
        }
        
        tbCongNhan.setModel(modelCongNhan =new javax.swing.table.DefaultTableModel(
            null,
            new String [] {
                "Mã công nhân", "Tên công nhân", "Giới tính"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        updateTableCongNhan();
     
        spBangCongNhan.setViewportView(tbCongNhan);
        if (tbCongNhan.getColumnModel().getColumnCount() > 0) {
            tbCongNhan.getColumnModel().getColumn(0).setPreferredWidth(60);
            tbCongNhan.getColumnModel().getColumn(2).setPreferredWidth(45);
        }

        javax.swing.GroupLayout pnBangCongNhanLayout = new javax.swing.GroupLayout(pnBangCongNhan);
        pnBangCongNhan.setLayout(pnBangCongNhanLayout);
        pnBangCongNhanLayout.setHorizontalGroup(
            pnBangCongNhanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnBangCongNhanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnBangCongNhanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnBangCongNhanLayout.createSequentialGroup()
                        .addComponent(lbTimKiemCongNhan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTimCongNhan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btTimCongNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnBangCongNhanLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(spBangCongNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnBangCongNhanLayout.setVerticalGroup(
            pnBangCongNhanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnBangCongNhanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spBangCongNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnBangCongNhanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTimKiemCongNhan)
                    .addComponent(txtTimCongNhan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btTimCongNhan))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        pnChonBang.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btBangGiaiDoan.setText("Bảng sản phẩm");
        btBangGiaiDoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBangGiaiDoanActionPerformed(evt);
                tbCongNhan.setModel(modelCongNhan =new javax.swing.table.DefaultTableModel(
                        null,
                        new String [] {
                            "Mã sản phẩm", "Tên sản phẩm"
                        }
                    ) {
                        Class[] types = new Class [] {
                            java.lang.String.class, java.lang.String.class, java.lang.String.class
                        };

                        public Class getColumnClass(int columnIndex) {
                            return types [columnIndex];
                        }
                    });
                lbTimKiemCongNhan.setText("Nhập mã sản phẩm");
                updateTableSanPham();
            }
        });

        btBangCongNhan.setText("Bảng công nhân");
        btBangCongNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBangGiaiDoanActionPerformed(evt);
                tbCongNhan.setModel(modelCongNhan =new javax.swing.table.DefaultTableModel(
                        null,
                        new String [] {
                            "Mã công nhân", "Tên công nhân", "Giới tính"
                        }
                    ) {
                        Class[] types = new Class [] {
                            java.lang.String.class, java.lang.String.class, java.lang.String.class
                        };

                        public Class getColumnClass(int columnIndex) {
                            return types [columnIndex];
                        }
                    });
                tbCongNhan.getColumnModel().getColumn(0).setPreferredWidth(60);
                tbCongNhan.getColumnModel().getColumn(2).setPreferredWidth(45);
                lbTimKiemCongNhan.setText("Nhập mã công nhân");
                updateTableCongNhan();
            }
        });

        javax.swing.GroupLayout pnChonBangLayout = new javax.swing.GroupLayout(pnChonBang);
        pnChonBang.setLayout(pnChonBangLayout);
        pnChonBangLayout.setHorizontalGroup(
            pnChonBangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnChonBangLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btBangGiaiDoan, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btBangCongNhan)
                .addGap(14, 14, 14))
        );
        pnChonBangLayout.setVerticalGroup(
            pnChonBangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnChonBangLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(pnChonBangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btBangGiaiDoan)
                    .addComponent(btBangCongNhan)))
        );

        javax.swing.GroupLayout pnCenterLayout = new javax.swing.GroupLayout(pnCenter);
        pnCenter.setLayout(pnCenterLayout);
        pnCenterLayout.setHorizontalGroup(
            pnCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCenterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnCenterLayout.createSequentialGroup()
                        .addComponent(pnTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnChucNang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(spPhanCong))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnBangCongNhan, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                    .addComponent(pnChonBang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(8, Short.MAX_VALUE))
        );
        pnCenterLayout.setVerticalGroup(
            pnCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCenterLayout.createSequentialGroup()
                .addGroup(pnCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnCenterLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(spPhanCong, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnChucNang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnCenterLayout.createSequentialGroup()
                        .addComponent(pnChonBang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnBangCongNhan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnCenter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnCenter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        
        tbCongNhan.addMouseListener(new MouseListener() {
			
			@Override
			public void mouseClicked(MouseEvent e) {
				// TODO Auto-generated method stub
				int row = tbCongNhan.getSelectedRow();
				if(lbTimKiemCongNhan.getText().equalsIgnoreCase("Nhập mã công nhân"))
		    	txtMaCongNhan.setText(((String) modelCongNhan.getValueAt(row, 0)).trim());
				else txtMaSanPham.setText(((String) modelCongNhan.getValueAt(row, 0)).trim());
			}

			@Override
			public void mousePressed(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}

			@Override
			public void mouseReleased(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}

			@Override
			public void mouseEntered(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}

			@Override
			public void mouseExited(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
		});
        tbPhanCong.addMouseListener(new MouseListener() {
			
			@Override
			public void mouseReleased(MouseEvent e) {
				// TODO Auto-generated method stub
			}
			
			@Override
			public void mousePressed(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mouseExited(MouseEvent e) {
				// TODO Auto-generated method stub
	
			}
			
			@Override
			public void mouseEntered(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mouseClicked(MouseEvent e) {
				// TODO Auto-generated method stub
				row1 = tbPhanCong.getSelectedRow();
				txtMaPhanCong.setText(((String) modelPhanCong.getValueAt(row1, 0)).trim());
				for(int i =0;i < cbGiaiDoan.getItemCount();i++) {
					if (cbGiaiDoan.getItemAt(i).equalsIgnoreCase(((String) modelPhanCong.getValueAt(row1, 1)).trim()))
						cbGiaiDoan.setSelectedIndex(i);
				}
				txtDonGia.setText(((String) modelPhanCong.getValueAt(row1, 2).toString()).trim());
				txtMaCongNhan.setText(((String) modelPhanCong.getValueAt(row1, 3)).trim());
				txtMaSanPham.setText(((String) modelPhanCong.getValueAt(row1, 4)).trim());
			}
		});
        txtMaCongNhan.setEnabled(false);
        txtMaSanPham.setEnabled(false);
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDonGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDonGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDonGiaActionPerformed

    private void btSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSuaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btSuaActionPerformed

    private void btTimPhanCongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTimPhanCongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btTimPhanCongActionPerformed

    private void btBangGiaiDoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBangGiaiDoanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btBangGiaiDoanActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(GUI_PhanCong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(GUI_PhanCong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(GUI_PhanCong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(GUI_PhanCong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new GUI_PhanCong().setVisible(true);
//            }
//        });
//    }
    private void updateTablePhanCong() {
    	modelPhanCong.setRowCount(0);
    	for(PhanCong pc : phanCong.getAllPhanCong()) {
    		Object []row = {pc.getMaPhanCong(),pc.getGiaDoan(),pc.getDonGia(),pc.getMaCongNhan().getMaCN(),pc.getMaSanPham().getMaSP()};
    		modelPhanCong.addRow(row);
    	}
    }
    private void updateTableCongNhan() {
    	modelCongNhan.setRowCount(0);
    	String gt = null;
    	for(CongNhanNew cn: phanCong.getAllCongNhan()) {
    		if(cn.isGioiTinh()==true) gt = "Nam";
    		else gt = "nữ";
    		Object []row = {cn.getMaCN(), cn.getHoTen(),gt};
    		modelCongNhan.addRow(row);
    	}
    }
    private void updateTableSanPham() {
    	modelCongNhan.setRowCount(0);
    	for(SanPham sp: phanCong.getAllSanPham()) {
    		Object []row = {sp.getMaSP(),sp.getTenSP()};
    		modelCongNhan.addRow(row);
    	}
    }
    private void editText(boolean t,boolean f) {
    	txtMaPhanCong.setEnabled(f);
    	txtDonGia.setEnabled(t);
    	cbGiaiDoan.setEnabled(t);
    	txtMaCongNhan.setEnabled(t);
    	txtMaSanPham.setEnabled(t);
    	btXoaRong.setEnabled(t);
    }
    private void editButton(JButton b, boolean t,boolean f) {
    	btXoa.setEnabled(t);
    	btThem.setEnabled(t);
    	btSua.setEnabled(t);
    	b.setEnabled(f);
    }
    private void xoaRong() {
    	txtMaPhanCong.setText("");
		txtDonGia.setText("");
		txtMaCongNhan.setText("");
		txtMaSanPham.setText("");
		cbGiaiDoan.setSelectedIndex(0);
    }
    private String maConThieu() {
    	int size = phanCong.getMaPC().size();
    	String khong  = "";
    
    	for(int i = 0; i<size-1;i++) { {
    			if(Integer.parseInt(phanCong.getMaPC().get(i))+1 !=Integer.parseInt(phanCong.getMaPC().get(i+1))) {
    				if(Integer.parseInt(phanCong.getMaPC().get(i))<9) khong = "0";
    				return "PC"+khong+(Integer.parseInt(phanCong.getMaPC().get(i))+1);
    			}
    		}
    	}
    	if(size<9) khong="0";
		return "PC"+khong+(Integer.parseInt(phanCong.getMaPC().get(size-1))+1) ;
    }
    private boolean kiemtra(String ma, String giaiDoan,String donGia,String maCN,String maSP) {
    	if (donGia.length() == 0) {
			showMessage("Nhập đơn giá", txtDonGia);
			return false;
		}
    	if (maCN.length() == 0) {
			showMessage("Hãy chọn công nhân",txtMaCongNhan);
			return false;
		}
    	if (maSP.length() == 0) {
			showMessage("Hãy chọn sản phẩm", txtMaCongNhan);
			return false;
		}
		if (!donGia.matches("^([1-9]\\d{3,100}([.][0-9])?)$")) {
			showMessage(
					"Đơn giá không được bắt đầu bằng 0, theo sau ít nhất là 3 chữ số",txtDonGia);
			return false;
		}
		return true;
	}
 	private void showMessage(String message, JTextField jTextField) {
		JOptionPane.showMessageDialog(this, message);
		jTextField.requestFocus();
	}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBangCongNhan;
    private javax.swing.JButton btBangGiaiDoan;
    private javax.swing.JButton btSua;
    private javax.swing.JButton btThem;
    private javax.swing.JButton btTimCongNhan;
    private javax.swing.JButton btTimPhanCong;
    private javax.swing.JButton btXoa;
    private javax.swing.JButton btXoaRong;
    private javax.swing.JButton btHuy;
    private javax.swing.JComboBox<String> cbGiaiDoan;
    private javax.swing.JLabel lbDonGia;
    private javax.swing.JLabel lbGiaiDoan;
    private javax.swing.JLabel lbMaCongNhan;
    private javax.swing.JLabel lbMaPhanCong;
    private javax.swing.JLabel lbMaSanPham;
    private javax.swing.JLabel lbTieuDe;
    private javax.swing.JLabel lbTimKiemCongNhan;
    private javax.swing.JLabel lbTimKiemPhanCong;
    private javax.swing.JPanel pnBangCongNhan;
    private javax.swing.JPanel pnCenter;
    private javax.swing.JPanel pnChonBang;
    private javax.swing.JPanel pnChucNang;
    private javax.swing.JPanel pnTieuDe;
    private javax.swing.JPanel pnTxt;
    private javax.swing.JScrollPane spBangCongNhan;
    private javax.swing.JScrollPane spPhanCong;
    private javax.swing.JTable tbCongNhan;
    private javax.swing.JTable tbPhanCong;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtMaCongNhan;
    private javax.swing.JTextField txtMaPhanCong;
    private javax.swing.JTextField txtMaSanPham;
    private javax.swing.JTextField txtTimCongNhan;
    private javax.swing.JTextField txtTimPhanCong;
    private javax.swing.table.DefaultTableModel modelCongNhan;
    private javax.swing.table.DefaultTableModel modelPhanCong;
    private DAO_PhanCong phanCong;
    
    private int row1;
    // End of variables declaration//GEN-END:variables
}

